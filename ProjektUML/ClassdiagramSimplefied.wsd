@startuml MachineBorderThicknes

'left to right direction



Package React-pages <<frame>>{

    together {

        Class AddSinglePlayer{
            <color:darkGreen>String <color:royalBlue>team
            <color:darkGreen>String <color:royalBlue>name1 
            <color:darkGreen>String <color:royalBlue>trophies1
            <color:darkGreen>Array<String | Array<String>> <color:royalBlue>teams
            <color:darkGreen>Team[] <color:royalBlue>teamObj
            <color:darkGreen>HTMLFormElement <color:royalBlue>form
            <color:darkGreen>String <color:royalBlue>link
            <color:darkGreen>int[] <color:royalBlue>TournamentIDs 
            <color:darkGreen>int[] <color:royalBlue>teamIDs
            <color:darkGreen>int <color:royalBlue>teamID 

            <color:darkGreen>JSX.Element</color> render()
            <color:darkGreen>void</color> confirm(<color:darkGreen>React.MouseEvent<HTMLButtonElemen, MouseEvent> <color:royalBlue>i</color>, <color:darkGreen>Array<Sting | Array<string>> <color:royalBlue>teams</color>)
            <color:darkGreen>void</color> nodelete()
            <color:darkGreen>void</color> delete()
            <color:darkGreen>void</color> createObject(<color:darkGreen>React.MouseEvent<HTMLAnchorElement, MouseEvent> <color:royalBlue>event</color>)
            <color:darkGreen>void</color> buttonClicked()
            <color:darkGreen>void</color> mounted()       
        }

        Class AddTwoPlayerTeams{
            <color:darkGreen>String <color:royalBlue>team
            <color:darkGreen>String <color:royalBlue>name1 
            <color:darkGreen>String <color:royalBlue>trophies1
            <color:darkGreen>String <color:royalBlue>name2
            <color:darkGreen>String <color:royalBlue>trophies2
            <color:darkGreen>Array<String | Array<String>> <color:royalBlue>teams
            <color:darkGreen>Team[] <color:royalBlue>teamObj
            <color:darkGreen>HTMLFormElement <color:royalBlue>form
            <color:darkGreen>String <color:royalBlue>link
            <color:darkGreen>int[] <color:royalBlue>TournamentIDs 
            <color:darkGreen>int[] <color:royalBlue>teamIDs
            <color:darkGreen>int <color:royalBlue>teamID 

            <color:darkGreen>JSX.Element</color> render()
            <color:darkGreen>void</color> confirm(<color:darkGreen>React.MouseEvent<HTMLButtonElement, MouseEvent> <color:royalBlue>i</color>, Array<Sting | Array<string>> <color:royalBlue>teams</color>)
            <color:darkGreen>void</color> nodelete()
            <color:darkGreen>void</color> delete()
            <color:darkGreen>void</color> createObject(<color:darkGreen>React.MouseEvent<HTMLAnchorElement, MouseEvent> <color:royalBlue>event</color>)
            <color:darkGreen>void</color> buttonClicked()
            <color:darkGreen>void</color> mounted()
        }

        Class TournamentPage{
            <color:darkGreen>String <color:royalBlue>link
            <color:darkGreen>String <color:royalBlue>loaded
            <color:darkGreen>String[] <color:royalBlue>canlink
            <color:darkGreen>Tournament <color:royalBlue>tournamentObject
            <color:darkGreen>Team[] <color:royalBlue>teamObject
            <color:darkGreen>TeamMember[] <color:royalBlue>teamMemberObjects
            <color:darkGreen>Match[] <color:royalBlue>matchObjects

            <color:darkGreen>JSX.Element</color> render()
            <color:darkGreen>void</color> mounted()
        }

    }
    

    
    Class ShowTournamentPage{
        <color:darkGreen>PushDatabase <color:royalBlue>pushDatabase
        <color:darkGreen>int[] <color:royalBlue>TournamentIDs
        <color:darkGreen>Boolean <color:royalBlue>loaded
        <color:darkGreen>int <color:royalBlue>length
        <color:darkGreen>Round[] <color:royalBlue>roundsInTournament
        <color:darkGreen>Boolean <color:royalBlue>allredyLoaded
        <color:darkGreen>Boolean <color:royalBlue>showedConfetti

        <color:darkGreen>JSX.Element</color> render()
        <color:darkGreen>void</color> tegn()
        <color:darkGreen>void</color> brackets(<color:darkGreen>int <color:royalBlue>e</color>)
        <color:darkGreen>void containsShadow(<color:darkGreen>React.MouseEvent<HTMLAnchorElement, MouseEvent> <color:royalBlue>event</color>, <color:darkGreen>Match <color:royalBlue>match</color>)
        <color:darkGreen>void</color> save()
        <color:darkGreen>void</color> updateScore()
        <color:darkGreen>Tournament</color> getTournament()
        <color:darkGreen>void</color> mounted()

    }

}

package logical-classes <<frame>>{

    Class Tournament{
        <color:darkGreen>String <color:royalBlue>name
        <color:darkGreen>int <color:royalBlue>TournamentID
        <color:darkGreen>GeneralSettings <color:royalBlue>generalSettings
        <color:darkGreen>Team <color:royalBlue>winner
        <color:darkGreen>Team[] <color:royalBlue>teams
        <color:darkGreen>Rounds[] <color:royalBlue>rounds
        <color:darkGreen>Boolean <color:royalBlue>hasBronze

        <color:darkGreen>void</color> startTournamemt()
        <color:darkGreen>void</color> createBrackets()
        <color:darkGreen>int setBracketRounds(<color:darkGreen>Team[] <color:royalBlue>teams</color>)
        <color:darkGreen>void</color> playWalkover()
        <color:darkGreen>void</color> createRoundRobin()
        <color:darkGreen>int</color> setRoundRobinRounds(<color:darkGreen>Team[] <color:royalBlue>teams</color>)
        <color:darkGreen>void</color> findRoundRobinWiner()
    }

    Class Round{
        <color:darkGreen>Tournament <color:royalBlue>tournament
        <color:darkGreen>int <color:royalBlue>firstMatchNumber
        <color:darkGreen>int <color:royalBlue>roundNumber
        <color:darkGreen>int <color:royalBlue>numberOfRounds
        <color:darkGreen>Match[] <color:royalBlue>matches
        <color:darkGreen>Array<Team|ShadowTeam> <color:royalBlue>teams

        <color:darkGreen>Array<Team|ShadowTeam></color> fillOutTeams(<color:darkGreen>Team[] <color:royalBlue>teams</color>)
        <color:darkGreen>void</color> setseeds()
        <color:darkGreen>Array<Team|ShadowTeam></color> sortTeams(<color:darkGreen>Array<Team|ShadowTeam> <color:royalBlue>teams</color>)
        <color:darkGreen>Array<Team|ShadowTeam></color> shuffleTeams()
        <color:darkGreen>void</color> addMatches()


    }

    Class Match{
        <color:darkGreen>Round <color:royalBlue>round 
        <color:darkGreen>int <color:royalBlue>ind 
        <color:darkGreen>Team[] <color:royalBlue>teams
        <color:darkGreen>int[] <color:royalBlue>results
        <color:darkGreen>int <color:royalBlue>matchnumber
        <color:darkGreen>Int <color:royalBlue>matchSeed
        <color:darkGreen>Team <color:royalBlue>winner
        <color:darkGreen>Team <color:royalBlue>looser

        <color:darkGreen>void</color> updateScore(<color:darkGreen>int <color:royalBlue>score0</color>, <color:darkGreen>int <color:royalBlue>score1</color>)
    }

    Class Team{
        <color:darkGreen>TeamMember[] <color:royalBlue>members
        <color:darkGreen>String <color:royalBlue>name
        <color:darkGreen>int <color:royalBlue>id
        <color:darkGreen>int[] <color:royalBlue>score 
        <color:darkGreen>int[] <color:royalBlue>pointDifference
        <color:darkGreen>float <color:royalBlue>avrageTrophies

        <color:darkGreen>void</color> addMember(<color:darkGreen>TeamMember <color:royalBlue>member)
    }

    Class ShadowTeam {
        <color:darkGreen>float <color:royalBlue>tournamentID
        <color:darkGreen>float <color:royalBlue>seed
    }

    class TeamMember{
        <color:darkGreen>String <color:royalBlue>name
        <color:darkGreen>int <color:royalBlue>trophies
        <color:darkGreen>int <color:royalBlue>teamID
        <color:darkGreen>int <color:royalBlue>tournamentID
    }

}



Tournament "1" -- "*" Round : <color:A80035>Rounds is in tournament
Tournament --> "*" Team : <color:A80035>contains these teams 
Round"1" --"*" Match : <color:A80035>Matches are played in
Match-->"0..2"Team : <color:A80035>Teams is playing in 
Match-->"0..2"ShadowTeam : <color:A80035>ShadowTeams is playing in 
Team-->"1..2"TeamMember : <color:A80035>Teams has members
Round-->"*"Team : <color:A80035>Has teams playing in
Round -->"*"ShadowTeam : <color:A80035>Has shadowteams playing in

ShowTournamentPage--> "*" Round : <color:A80035>Contains Rounds
ShowTournamentPage--> "1" Tournament : <color:A80035>Shows Torunament



AddSinglePlayer -[#purple]left->"1" Tournament : <color:purple>creates a tournament
AddTwoPlayerTeams -[#blue]left->"1" Tournament : <color:blue>creates a tournament

TournamentPage -down->"1" Tournament : <color:A80035>Creates a tournament


Team-r-|>ShadowTeam




"React-pages"-down[hidden]>"logical-classes"

AddSinglePlayer-down[hidden]->ShowTournamentPage

AddSinglePlayer-down[hidden]->TournamentPage

AddSinglePlayer-left[hidden]->ShowTournamentPage





@enduml